name: CI - FastAPI + Docker

on:
  push:
    branches: [develop]
  pull_request:
    branches: [develop]
  
  workflow_dispatch:

jobs:

  test-and-build:
    runs-on: ubuntu-latest
    if: github.actor != 'github-actions[bot]'  # evita los loops infinitos

    steps:
    - name: Checkout cÃ³digo
      uses: actions/checkout@v3

    - name: Configurar Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Instalar dependencias
      run: |
        python -m pip install --upgrade pip
        pip install -r Taller6/api/requirements-workflow.txt
        pip install fastapi[all] pytest


    - name: Ejecutar pruebas
      run: |
        export PYTHONPATH=$PYTHONPATH:./Taller6/api
        pytest Taller6/api/tests/

    - name: Login a DockerHub
      if: success()
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Generate timestamp
      id: timestamp
      shell: bash
      run: echo "tag=$(date +'%Y-%m-%d-%H-%M-%S')" >> $GITHUB_OUTPUT

    - name: Construir y subir imagen a DockerHub
      if: success()
      uses: docker/build-push-action@v5
      with:
        context: ./Taller6/api
        file: ./Taller6/api/Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/taller6-fastapi-ml-api:${{ steps.timestamp.outputs.tag }}
    
    - name: Reemplazar la imagen en el manifiesto de Argo CD
      run: |
        sed -i "s|image: 04602/taller6-fastapi-ml-api:.*|image: 04602/taller6-fastapi-ml-api:${{ steps.timestamp.outputs.tag }}|" Taller6/manifest/api-deployment.yaml
        
    - name: Verifica estado de Git antes del commit
      run: |
        git status
        git diff
    
    - name: Commit y push del nuevo manifiesto
      if: github.ref == 'refs/heads/develop'
      run: |
        git config --global user.email "github-actions@github.com"
        git config --global user.name "GitHub Actions"
        git add Taller6/manifest/api-deployment.yaml
        git commit -m "Actualiza imagen a ${{ env.IMAGE_TAG }} para despliegue"
        git push 

