[2025-05-03T10:42:25.512+0000] {local_task_job_runner.py:120} INFO - ::group::Pre task execution logs
[2025-05-03T10:42:25.583+0000] {taskinstance.py:2073} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: diabetes_undersampling_simple.train_and_predict manual__2025-05-03T10:39:44.110646+00:00 [queued]>
[2025-05-03T10:42:25.610+0000] {taskinstance.py:2073} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: diabetes_undersampling_simple.train_and_predict manual__2025-05-03T10:39:44.110646+00:00 [queued]>
[2025-05-03T10:42:25.612+0000] {taskinstance.py:2303} INFO - Starting attempt 1 of 2
[2025-05-03T10:42:25.683+0000] {taskinstance.py:2327} INFO - Executing <Task(PythonOperator): train_and_predict> on 2025-05-03 10:39:44.110646+00:00
[2025-05-03T10:42:25.737+0000] {standard_task_runner.py:63} INFO - Started process 2254 to run task
[2025-05-03T10:42:25.770+0000] {standard_task_runner.py:90} INFO - Running: ['***', 'tasks', 'run', 'diabetes_undersampling_simple', 'train_and_predict', 'manual__2025-05-03T10:39:44.110646+00:00', '--job-id', '323', '--raw', '--subdir', 'DAGS_FOLDER/model.py', '--cfg-path', '/tmp/tmpam54rngg']
[2025-05-03T10:42:25.782+0000] {standard_task_runner.py:91} INFO - Job 323: Subtask train_and_predict
[2025-05-03T10:42:25.954+0000] {task_command.py:426} INFO - Running <TaskInstance: diabetes_undersampling_simple.train_and_predict manual__2025-05-03T10:39:44.110646+00:00 [running]> on host 31e5ce530290
[2025-05-03T10:42:26.203+0000] {taskinstance.py:2644} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='***' AIRFLOW_CTX_DAG_ID='diabetes_undersampling_simple' AIRFLOW_CTX_TASK_ID='train_and_predict' AIRFLOW_CTX_EXECUTION_DATE='2025-05-03T10:39:44.110646+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2025-05-03T10:39:44.110646+00:00'
[2025-05-03T10:42:26.205+0000] {taskinstance.py:430} INFO - ::endgroup::
[2025-05-03T10:42:41.119+0000] {logging_mixin.py:188} INFO - Entrenando modelo...
[2025-05-03T10:42:41.153+0000] {logging_mixin.py:188} INFO - Error entrenando modelo: Input X contains NaN.
RandomForestClassifier does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
[2025-05-03T10:42:41.244+0000] {python.py:237} INFO - Done. Returned value was: Modelo entrenado y predicciones realizadas
[2025-05-03T10:42:41.245+0000] {taskinstance.py:441} INFO - ::group::Post task execution logs
[2025-05-03T10:42:41.300+0000] {taskinstance.py:1205} INFO - Marking task as SUCCESS. dag_id=diabetes_undersampling_simple, task_id=train_and_predict, execution_date=20250503T103944, start_date=20250503T104225, end_date=20250503T104241
[2025-05-03T10:42:41.516+0000] {local_task_job_runner.py:240} INFO - Task exited with return code 0
[2025-05-03T10:42:41.686+0000] {taskinstance.py:3482} INFO - 0 downstream tasks scheduled from follow-on schedule check
[2025-05-03T10:42:41.694+0000] {local_task_job_runner.py:222} INFO - ::endgroup::
