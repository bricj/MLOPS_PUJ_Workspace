apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-diabetes-initdb-config
data:
  init.sql: |
    # El contenido se agregará a través de kubectl create configmap

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-diabetes-data-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-diabetes
spec:
  selector:
    matchLabels:
      app: mysql-diabetes
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mysql-diabetes
    spec:
      containers:
      - image: mysql:8.0
        name: mysql
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: root
        - name: MYSQL_DATABASE
          value: diabetes
        - name: MYSQL_USER
          value: diabetes_user
        - name: MYSQL_PASSWORD
          value: diabetes_password
        ports:
        - containerPort: 3307
          name: mysql
        volumeMounts:
        - name: mysql-diabetes-data
          mountPath: /var/lib/mysql
        - name: mysql-diabetes-initdb
          mountPath: /docker-entrypoint-initdb.d
        args:
        - --default-authentication-plugin=mysql_native_password
        - --init-file=/docker-entrypoint-initdb.d/init.sql
        - --port=3307
        - --bind-address=0.0.0.0  # Esto permite conexiones desde cualquier IP
        readinessProbe:
          exec:
            command: ["mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot"]
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
        livenessProbe:
          exec:
            command: ["mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot"]
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
      volumes:
      - name: mysql-diabetes-data
        persistentVolumeClaim:
          claimName: mysql-diabetes-data-pvc
      - name: mysql-diabetes-initdb
        configMap:
          name: mysql-diabetes-initdb-config

---
apiVersion: v1
kind: Service
metadata:
  name: mysql-diabetes
spec:
  ports:
  - port: 3307
    targetPort: 3307
  selector:
    app: mysql-diabetes
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: mysql-diabetes-external
  annotations:
    # Esta anotación puede ser útil en algunos entornos para garantizar que el servicio sea accesible
    metallb.universe.tf/allow-shared-ip: mysql-external-access
spec:
  ports:
  - port: 3307
    targetPort: 3307
    nodePort: 30307
    name: mysql
    protocol: TCP
  selector:
    app: mysql-diabetes
  type: NodePort
  # Si estás en un entorno cloud, puedes cambiar esto a LoadBalancer para obtener una IP externa
  # type: LoadBalancer